apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sqlpad
  name: sqlpad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlpad
  strategy: {}
  template:
    metadata:
      labels:
        app: sqlpad
    spec:
      containers:
      - image: docker.io/sqlpad/sqlpad:5
        name: sqlpad
        env:
        - name: SQLPAD_PORT
          value: "3000"
        - name: SQLPAD_SEED_DATA_PATH
          value: /etc/sqlpad
        - name: SQLPAD_ADMIN
          value: admin
        - name: SQLPAD_ADMIN_PASSWORD
          value: admin
        - name: SQLPAD_APP_LOG_LEVEL
          value: info
        - name: SQLPAD_WEB_LOG_LEVEL
          value: warn
        - name: SQLPAD_CONNECTIONS__source__name
          value: Source Database
        - name: SQLPAD_CONNECTIONS__source__driver
          value: sqlserver
        - name: SQLPAD_CONNECTIONS__source__host
          value: source-mssql
        - name: SQLPAD_CONNECTIONS__source__database
          value: InternationalDB
        - name: SQLPAD_CONNECTIONS__source__username
          value: sa
        - name: SQLPAD_CONNECTIONS__source__password
          value: Password!
        - name: SQLPAD_CONNECTIONS__target__name
          value: Target Database
        - name: SQLPAD_CONNECTIONS__target__driver
          value: sqlserver
        - name: SQLPAD_CONNECTIONS__target__host
          value: target-mssql
        - name: SQLPAD_CONNECTIONS__target__database
          value: InternationalDB
        - name: SQLPAD_CONNECTIONS__target__username
          value: sa
        - name: SQLPAD_CONNECTIONS__target__password
          value: Password!
        - name: SQLPAD_QUERIES__showtables__name
          value: Show Tables
        - name: SQLPAD_QUERIES__showtables__queryText
          value: "SELECT * FROM SYS.TABLES"
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: data
          mountPath: /var/lib/sqlpad
        - name: config
          mountPath: /etc/sqlpad/queries
        resources: {}
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: sqlpad
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sqlpad
  name: sqlpad
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: sqlpad
status:
  loadBalancer: {}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: sqlpad
  name: sqlpad
spec:
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  port:
    targetPort: 3000
  to:
    kind: Service
    name: sqlpad
    weight: 100
  wildcardPolicy: None
status: {}
---
apiVersion: v1
data:
  add_new_column.json: |-
    {
        "id": "alter",
        "name": "Add New Column",
        "connectionId": "source",
        "queryText": "ALTER TABLE dbo.Customers ADD phone varchar(15)",
        "createdBy": "admin",
        "acl": [
          {
            "groupId": "__EVERYONE__",
            "write": true
          }
        ]
      }
  change_capture_instance.json: |-
    {
        "id": "change-capture-instance",
        "name": "Change Capture Instance",
        "connectionId": "source",
        "queryText": "EXEC sys.sp_cdc_enable_table @source_schema = 'dbo', @source_name = 'Customers', @role_name = NULL, @supports_net_changes = 0, @capture_instance = 'dbo_customers_v2'",
        "createdBy": "admin",
        "acl": [
          {
            "groupId": "__EVERYONE__",
            "write": true
          }
        ]
      }
  insert.json: |-
    {
        "id": "insert",
        "name": "Insert New Customer",
        "connectionId": "source",
        "queryText": "INSERT INTO dbo.Customers values (1004, 'Laurie', 'York', 'laurie@york.com')",
        "createdBy": "admin",
        "acl": [
          {
            "groupId": "__EVERYONE__",
            "write": true
          }
        ]
      }
  select_source.json: |-
    {
        "id": "select-source",
        "name": "Customers in Source",
        "connectionId": "source",
        "queryText": "SELECT * FROM dbo.Customers",
        "createdBy": "admin",
        "acl": [
          {
            "groupId": "__EVERYONE__",
            "write": true
          }
        ]
      }
  select_target.json: |-
    {
        "id": "select-target",
        "name": "Customers in Target",
        "connectionId": "target",
        "queryText": "SELECT * FROM dbo.Customers",
        "createdBy": "admin",
        "acl": [
          {
            "groupId": "__EVERYONE__",
            "write": true
          }
        ]
      }
  update_phone.json: |-
    {
        "id": "update-phone",
        "name": "Update Phone",
        "connectionId": "source",
        "queryText": "UPDATE dbo.Customers SET phone='12345678' WHERE id=1004",
        "createdBy": "admin",
        "acl": [
          {
            "groupId": "__EVERYONE__",
            "write": true
          }
        ]
      }
kind: ConfigMap
metadata:
  name: sqlpad
